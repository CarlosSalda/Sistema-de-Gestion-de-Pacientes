{"version":3,"sources":["assets/background.jpg","components/Login.js","routes/apiCallsUser.js","components/PageError.js","components/RecoverPassword.js","elementos/Formularios.js","components/Input.js","components/RestabContraseña.js","components/Register.js","components/Navegation.js","elementos/ButtonActions.js","components/Home.js","components/Paciente.js","components/PacientForm.js","routes/apiCallsPatient.js","components/PatientsList.js","components/Spg.js","reportWebVitals.js","index.js"],"names":["Login","history","useHistory","inputRef","useRef","emailRef","passwordRef","useState","email","password","data","setData","handleInputChange","event","target","name","value","current","disabled","checkEmail","checkPassword","emailInput","trim","length","test","String","toLowerCase","goToHome","a","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","preventDefault","dataAx","obj","axios","post","then","r","push","catch","e","fire","icon","title","response","src","background","alt","className","Form","onSubmit","Group","controlId","Control","ref","onChange","placeholder","type","Button","id","onClick","variant","PageError","RecoverPassword","pathname","state","colores","Formulario","styled","form","Label","label","props","valido","css","GrupoInput","div","Input","input","LeyendaError","p","IconoValidacion","FontAwesomeIcon","ContenedorBotonCentrado","Boton","button","ComponenteInput","estado","cambiarEstado","tipo","leyendaError","expresionRegular","funcion","validacion","campo","htmlFor","onKeyUp","onBlur","faCheckCircle","faTimesCircle","RestabContraseña","cambiarPassword","password2","cambiarPassword2","setEmail","location","useLocation","useEffect","put","action","prevState","Register","nombre","cambiarNombre","correo","cambiarCorreo","expresiones","usuario","telefono","Navegation","Navbar","bg","expand","Container","Brand","href","size","Toggle","Collapse","Nav","Link","showCancelButton","cancelButtonText","confirmButtonColor","cancelButtonColor","confirmButtonText","confirmButtonAttributes","result","isConfirmed","ButtonsHome","onClickDo","isDisabled","text","Home","Fragment","ButtonActions","Paciente","dni","apellido","listaPacientes","map","paci","PacientForm","handleChange","setState","handleChangeCheckBox","checked","area","document","getElementById","index","handleCheckBoxSymptoms","sintomas","filter","s","handleExtraSymptoms","handleSubmit","headers","resetForm","calle","numero","piso","codigo_postal","localidad","sintomasExtras","provincia","isNn","infoNN","bSintomasExtras","Array","from","getElementsByClassName","forEach","c","check","console","log","this","Row","Col","xs","InputGroup","Checkbox","Text","as","rows","hidden","Component","PatientsList","getData","get","res","componentDidMount","deletePatient","delete","setTimeout","window","reload","md","paciente","Card","style","width","Body","Title","surname","_id","faClinicMedical","React","Spg","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.89f4fb52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.4e40f6ae.jpg\";","import React, { useRef, useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport '../styles/Login.css';\r\nimport { useHistory } from 'react-router';\r\nimport background from '../assets/background.jpg';\r\nimport { login } from '../routes/apiCallsUser';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory();\r\n    const inputRef = useRef(null);\r\n    const emailRef = useRef(null);\r\n    const passwordRef = useRef(null);\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        setData({\r\n            ...data,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        inputRef.current.disabled = !checkEmail() || !checkPassword()\r\n    };\r\n\r\n\r\n    const checkEmail = () => {\r\n        const emailInput = (emailRef.current.value).trim()\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        return emailInput.length >= 5 && re.test(String(emailInput).toLowerCase())\r\n    };\r\n\r\n    const checkPassword = () => {\r\n        const passwordInput = passwordRef.current.value\r\n\r\n        return passwordInput.trim().length >= 5\r\n    };\r\n\r\n    const goToHome = async (event) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        event.preventDefault();\r\n        const dataAx = {\r\n            email: data.email,\r\n            password: data.password\r\n        }\r\n\r\n        await login(dataAx).then(r => history.push('/home')).catch(e => {\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: e.response.data.response\r\n            })\r\n        })\r\n    };\r\n\r\n    const goToRecover = () => {\r\n        history.push(\"/recoverPassword\")\r\n    };\r\n    const goToHomes = () => {\r\n        history.push(\"/recoverPassword\")\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <img src={background} alt=\"background\" className=\"myBackgroundLogin\" />\r\n\r\n            <div className=\"divFormLogin\">\r\n                <p className='title'><FontAwesome name='heartbeat'> SGP </FontAwesome></p>\r\n                <Form className=\"mainForm\" onSubmit={goToHome}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Control ref={emailRef} className=\"boxInput\" name=\"email\" onChange={handleInputChange} placeholder=\"Email\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Control ref={passwordRef} className=\"boxInput\" name=\"password\" type=\"password\" placeholder=\"Contraseña\" onChange={handleInputChange} />\r\n                    </Form.Group>\r\n\r\n                    <Button id=\"btnLogIn\" className=\"boton\"onClick={goToHomes} ref={inputRef} variant=\"success\" type=\"submit\" disabled>\r\n                        Iniciar sesion\r\n                    </Button>\r\n                    <hr />\r\n                    <Form.Group>\r\n                        <p className=\"urlRecover\" onClick={goToRecover}>¿Olvidaste tu contraseña?</p>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\n\r\n// const basicUrl = 'http://sistema-gestion-paciente.herokuapp.com/api';\r\n\r\nexport const login = (obj) => {\r\n    return axios.post(`/api/login`, obj)\r\n}\r\n\r\nexport const register = (obj) => {\r\n    return axios.post(`/api/register`, obj)\r\n}\r\n\r\nexport const mailRegistered = (obj) => {\r\n    return axios.post(`/api/mailRegistered`, obj)\r\n}\r\n\r\nexport const changePassword =  (obj) => {\r\n    return axios.put(`/api/changePassword`, obj)\r\n}","import React from \"react\";\r\nimport '../styles/PageError.css'\r\n\r\nconst PageError = () => {  \r\n    return(\r\n        <p>Hola Soy Una Pagina de Error</p>\r\n    )\r\n}\r\n\r\nexport default PageError;","import React, { useRef, useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport '../styles/Login.css';\r\nimport { useHistory } from 'react-router';\r\nimport background from '../assets/background.jpg';\r\nimport { mailRegistered } from '../routes/apiCallsUser';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst RecoverPassword = () => {\r\n\r\n    const history = useHistory();\r\n    const inputRef = useRef(null);\r\n    const emailRef = useRef(null);\r\n    const passwordRef = useRef(null);\r\n    const [data, setData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        setData({\r\n            ...data,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        inputRef.current.disabled = !checkEmail()\r\n    };\r\n\r\n\r\n    const checkEmail = () => {\r\n        const emailInput = (emailRef.current.value).trim()\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        return emailInput.length >= 5 && re.test(String(emailInput).toLowerCase())\r\n    };\r\n\r\n    const goToHome =  (event) => {\r\n        event.preventDefault();\r\n        history.push(\"/\")\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        await mailRegistered(data).then( r =>{\r\n            history.push({\r\n                pathname: \"/restabContraseña\",\r\n                state: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: e.response.data.response\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <img src={background} alt=\"background\" className=\"myBackgroundLogin\" />\r\n\r\n            <div className=\"divFormLogin\">\r\n\r\n                <p className='title'><FontAwesome name='heartbeat'> SGP </FontAwesome></p>\r\n                <p className='center'> ¿Olvidaste tu contraseña?</p>\r\n\r\n                <Form className=\"mainForm\" onSubmit={onSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Control ref={emailRef} className=\"boxInput\" name=\"email\" onChange={handleInputChange} placeholder=\"Email\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button id=\"btn\" className=\"boton\" ref={inputRef} variant=\"success\" type=\"submit\">\r\n                        Reestablecer contraseña\r\n                    </Button>\r\n                    <hr />\r\n                </Form>\r\n                <Button id=\"btnLog\" className=\"boton\" variant=\"success\" onClick={goToHome}>\r\n                    Ir a Login\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default RecoverPassword;\r\n","import styled, { css } from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst colores = {\r\n\tborde: \"#0075FF\",\r\n\terror: \"#bb2929\",\r\n\texito: \"#1ed12d\"\r\n}\r\n\r\nconst Formulario = styled.form`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr 1fr;\r\n\tgap: 20px;\r\n\tbackground-image: url('../assets/background.jpg');\r\n\ttext-align: center;\r\n\tfont-family: 'Merriweather', serif;\r\n\r\n\t@media (max-width: 800px){\r\n\t\tgrid-template-columns: 1fr;\r\n\t}\r\n`;\r\n\r\nconst Label = styled.label`\r\n\tdisplay: block;\r\n\tfont-weight: 700;\r\n\tpadding: 10px;\r\n\tmin-height: 40px;\r\n\tcursor: pointer;\r\n\tfont-family: 'Merriweather', serif;\r\n\r\n\t${props => props.valido === 'false' && css`\r\n\t\tcolor: ${colores.error};\r\n\t`}\r\n`;\r\n\r\nconst GrupoInput = styled.div`\r\n\tposition: relative;\r\n\tz-index: 90;\r\n\ttext-align: center;\r\n\tfont-family: 'Merriweather', serif;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\tborder: 2px black solid;\r\n\twidth: 100%;\r\n\tbackground: #fff;\r\n\tborder-radius: 3px;\r\n\theight: 45px;\r\n\tline-height: 45px;\r\n\tpadding: 0 40px 0 10px;\r\n\ttransition: .3s ease all;\r\n\tborder: 3px solid transparent;\r\n\ttext-align: center;\r\n\tborder: 2px black solid;\r\n\tfont-family: 'Merriweather', serif;\r\n\r\n\t::placeholder,\r\n\t::-webkit-input-placeholder {\r\n\t\ttransform:translate3d(12%,0,0)\r\n \t}\r\n\r\n\r\n\t&:focus {\r\n\t\tborder: 3px solid ${colores.borde};\r\n\t\toutline: none;\r\n\t\tbox-shadow: 3px 0px 30px rgba(163,163,163, 0.4);\r\n\t}\r\n\r\n\t${props => props.valido === 'true' && css`\r\n\t\tborder: 3px solid transparent;\r\n\t`}\r\n\r\n\t${props => props.valido === 'false' && css`\r\n\t\tborder: 3px solid ${colores.error} !important;\r\n\t`}\r\n`;\r\n\r\nconst LeyendaError = styled.p`\r\n\tfont-size: 12px;\r\n\tmargin-bottom: 0;\r\n\tcolor: ${colores.error};\r\n\tdisplay: none;\r\n\tfont-family: 'Merriweather', serif;\r\n\r\n\t${props => props.valido === 'true' && css`\r\n\t\tdisplay: none;\r\n\t`}\r\n\r\n\t${props => props.valido === 'false' && css`\r\n\t\tdisplay: block;\r\n\t`}\r\n`;\r\n\r\nconst IconoValidacion = styled(FontAwesomeIcon)`\r\n\tposition: absolute;\r\n\tright: 10px;\r\n\tbottom: 14px;\r\n\tz-index: 100;\r\n\tfont-size: 16px;\r\n\topacity: 0;\r\n\tfont-family: 'Merriweather', serif;\r\n\r\n\t${props => props.valido === 'false' && css`\r\n\t\topacity: 1;\r\n\t\tcolor: ${colores.error};\r\n\t`}\r\n\r\n\t${props => props.valido === 'true' && css`\r\n\t\topacity: 1;\r\n\t\tcolor: ${colores.exito};\r\n\t`}\r\n`;\r\n\r\nconst ContenedorTerminos = styled.div`\r\n\tgrid-column: span 2;\r\n\tfont-family: 'Merriweather', serif;\r\n\r\n\tinput {\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\r\n\t@media (max-width: 800px){\r\n\t\tgrid-column: span 1;\r\n\t}\r\n`;\r\n\r\nconst ContenedorBotonCentrado = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tgrid-column: span 2;\r\n\tfont-family: 'Merriweather', serif;\r\n\r\n\t@media (max-width: 800px){\r\n\t\tgrid-column: span 1;\r\n\t}\r\n`;\r\n\r\nconst Boton = styled.button`\r\n\tmargin-top: 25px;\r\n\theight: 45px;\r\n\tline-height: 45px;\r\n\twidth: 30%;\r\n\tbackground: #69b190;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\tborder: none;\r\n\tborder-radius: 3px;\r\n\tcursor: pointer;\r\n\ttransition: .1s ease all;\r\n\tfont-family: 'Merriweather', serif;\r\n\r\n\t&:hover {\r\n\t\tbox-shadow: 3px 0px 30px rgba(163,163,163, 1);\r\n\t}\r\n`;\r\n\r\nconst MensajeExito = styled.p`\r\n\tfont-size: 14px;\r\n\tcolor: ${colores.exito};\r\n\tfont-family: 'Merriweather', serif;\r\n`;\r\n\r\nconst MensajeError = styled.div`\r\n\theight: 45px;\r\n\tline-height: 45px;\r\n\tbackground: #F66060;\r\n\tpadding: 0px 15px;\r\n\tborder-radius: 3px;\r\n\tgrid-column: span 2;\r\n\tfont-family: 'Merriweather', serif;\r\n\tp {\r\n\t\tmargin: 0;\r\n\t} \r\n\tb {\r\n\t\tmargin-left: 10px;\r\n\t}\r\n`;\r\n\r\nexport {\r\n\tFormulario,\r\n\tLabel,\r\n\tGrupoInput,\r\n\tInput,\r\n\tLeyendaError,\r\n\tIconoValidacion,\r\n\tContenedorTerminos,\r\n\tContenedorBotonCentrado,\r\n\tBoton,\r\n\tMensajeExito,\r\n\tMensajeError,\r\n};","import React from 'react';\r\nimport {Input, Label, GrupoInput, LeyendaError, IconoValidacion} from '../elementos/Formularios';\r\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ComponenteInput = ({estado, cambiarEstado, tipo, label, placeholder, name, leyendaError, expresionRegular, funcion}) => {\r\n\tconst onChange = (e) => {\r\n\t\tcambiarEstado({...estado, campo: e.target.value});\r\n\t}\r\n\r\n\tconst validacion = () => {\r\n\t\tif(expresionRegular){\r\n\t\t\tif(expresionRegular.test(estado.campo.trim())){\r\n\t\t\t\tcambiarEstado({...estado, valido: 'true'});\r\n\t\t\t} else {\r\n\t\t\t\tcambiarEstado({...estado, valido: 'false'});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(funcion){\r\n\t\t\tfuncion();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Label htmlFor={name} valido={estado.valido}>{label}</Label>\r\n\t\t\t<GrupoInput>\r\n\t\t\t\t<Input \r\n\t\t\t\t\ttype={tipo}\r\n\t\t\t\t\tplaceholder={placeholder} \r\n\t\t\t\t\tid={name}\r\n\t\t\t\t\tvalue={estado.campo}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonKeyUp={validacion}\r\n\t\t\t\t\tonBlur={validacion}\r\n\t\t\t\t\tvalido={estado.valido}\r\n\t\t\t\t/>\r\n\t\t\t\t<IconoValidacion \r\n\t\t\t\t\ticon={estado.valido === 'true' ? faCheckCircle : faTimesCircle}\r\n\t\t\t\t\tvalido={estado.valido}\r\n\t\t\t\t/>\r\n\t\t\t</GrupoInput>\r\n\t\t\t<LeyendaError valido={estado.valido}>{leyendaError}</LeyendaError>\r\n\t\t</div>\r\n\t);\r\n}\r\n \r\nexport default ComponenteInput;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n\tFormulario,\r\n\tContenedorBotonCentrado,\r\n\tBoton,\r\n\t// MensajeExito,\r\n\t// MensajeError,\r\n} from \"../elementos/Formularios\";\r\nimport FontAwesome from 'react-fontawesome';\r\n// import { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Input from \"./Input\";\r\nimport background from \"../assets/background.jpg\";\r\nimport \"../styles/Register.css\";\r\nimport { changePassword } from \"../routes/apiCallsUser\";\r\nimport Swal from 'sweetalert2';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst RestabContraseña = () => {\r\n\r\n    const [password, cambiarPassword] = useState({ campo: \"\", valido: null });\r\n\tconst [password2, cambiarPassword2] = useState({ campo: \"\", valido: null });\r\n\tconst [email, setEmail] = useState({email: ''})\r\n\tconst location =  useLocation()\r\n\t// const [formularioValido, cambiarFormularioValido] = useState(null);\r\n\t// const refSpan = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmail({\r\n\t\t\temail : location.state.email\r\n\t\t})\r\n\t}, [location])\r\n\r\n\r\n\r\n\tconst expresiones = {\r\n\t\tpassword: /^.{5,12}$/, // 4 a 12 digitos.\r\n\t};\r\n\r\n\tconst validarPassword2 = () => {\r\n\t\tif (password.campo.trim().length > 0) {\r\n\t\t\tif (password.campo !== password2.campo) {\r\n\t\t\t\tcambiarPassword2((prevState) => {\r\n\t\t\t\t\treturn { ...prevState, valido: \"false\" };\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tcambiarPassword2((prevState) => {\r\n\t\t\t\t\treturn { ...prevState, valido: \"true\" };\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\tconst Toast = Swal.mixin({\r\n\t\t\ttoast: true,\r\n\t\t\tposition: 'top-end',\r\n\t\t\tshowConfirmButton: false,\r\n\t\t\ttimer: 3000,\r\n\t\t\ttimerProgressBar: true,\r\n\t\t\tdidOpen: (toast) => {\r\n\t\t\t\ttoast.addEventListener('mouseenter', Swal.stopTimer)\r\n\t\t\t\ttoast.addEventListener('mouseleave', Swal.resumeTimer)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif (\r\n\t\t\tpassword.valido === \"true\" &&\r\n\t\t\tpassword2.valido === \"true\"\r\n\t\t) {\r\n\t\t\tconst dataAx = {\r\n\t\t\t\temail: email.email,\r\n\t\t\t\tpassword: password.campo\r\n\t\t\t}\r\n\t\t\tcambiarPassword({ campo: \"\", valido: null });\r\n\t\t\tcambiarPassword2({ campo: \"\", valido: \"null\" });\r\n\r\n\t\t\tawait changePassword(dataAx).then(r => {\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\ttitle: r.data.response\r\n\t\t\t\t})\r\n\t\t\t}).catch(e => {\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: 'error',\r\n\t\t\t\t\ttitle: e.response.data.response\r\n\t\t\t\t})\r\n\t\t\t})\r\n \r\n\t\t} else {\r\n\t\t\tToast.fire({\r\n\t\t\t\ticon: 'alert',\r\n\t\t\t\ttitle: 'Las contraseñas no son identicas!'\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n    return (\r\n        <>\r\n            <img src={background} alt=\"background\" className=\"myBackgroundLogin\" />\r\n\r\n            <div className=\"divForm\">\r\n\t\t\t\t<p className='title'><FontAwesome name='heartbeat'> SGP </FontAwesome></p>\r\n                <p className='center'><FontAwesome name='heartbeat'>Ingrese su nueva contraseña</FontAwesome></p>\r\n\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<Formulario action=\"\" onSubmit={onSubmit}>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\testado={password}\r\n\t\t\t\t\t\t\tcambiarEstado={cambiarPassword}\r\n\t\t\t\t\t\t\ttipo=\"password\"\r\n\t\t\t\t\t\t\tlabel=\"Contraseña\"\r\n\t\t\t\t\t\t\tplaceholder=\"Contraseña\"\r\n\t\t\t\t\t\t\tname=\"password1\"\r\n\t\t\t\t\t\t\tleyendaError=\"La contraseña tiene que ser de 5 a 12 dígitos.\"\r\n\t\t\t\t\t\t\texpresionRegular={expresiones.password}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\testado={password2}\r\n\t\t\t\t\t\t\tcambiarEstado={cambiarPassword2}\r\n\t\t\t\t\t\t\ttipo=\"password\"\r\n\t\t\t\t\t\t\tlabel=\"Repetir contraseña\"\r\n\t\t\t\t\t\t\tplaceholder=\"Repertir Contraseña\"\r\n\t\t\t\t\t\t\tname=\"password2\"\r\n\t\t\t\t\t\t\tleyendaError=\"Ambas contraseñas deben ser iguales.\"\r\n\t\t\t\t\t\t\tfuncion={validarPassword2}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<ContenedorBotonCentrado>\r\n\t\t\t\t\t\t\t<Boton id=\"btnEnviar\"  type=\"submit\">Enviar</Boton>\t\t\t\r\n\t\t\t\t\t\t</ContenedorBotonCentrado>\r\n\t\t\t\t\t</Formulario>\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default RestabContraseña;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tFormulario,\r\n\tContenedorBotonCentrado,\r\n\tBoton,\r\n\t// MensajeExito,\r\n\t// MensajeError,\r\n} from \"../elementos/Formularios\";\r\nimport FontAwesome from 'react-fontawesome';\r\n// import { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Input from \"./Input\";\r\nimport background from \"../assets/background.jpg\";\r\nimport \"../styles/Register.css\";\r\nimport { register } from \"../routes/apiCallsUser\";\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Register = () => {\r\n\tconst [nombre, cambiarNombre] = useState({ campo: \"\", valido: null });\r\n\tconst [password, cambiarPassword] = useState({ campo: \"\", valido: null });\r\n\tconst [password2, cambiarPassword2] = useState({ campo: \"\", valido: null });\r\n\tconst [correo, cambiarCorreo] = useState({ campo: \"\", valido: null });\r\n\tconst history = useHistory();\r\n\t// const [formularioValido, cambiarFormularioValido] = useState(null);\r\n\t// const refSpan = useRef(null);\r\n\r\n\r\n\r\n\tconst expresiones = {\r\n\t\tusuario: /^[a-zA-Z0-9_-]{4,16}$/, // Letras, numeros, guion y guion_bajo\r\n\t\tnombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\r\n\t\tpassword: /^.{5,12}$/, // 4 a 12 digitos.\r\n\t\tcorreo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n\t\ttelefono: /^\\d{7,14}$/, // 7 a 14 numeros.\r\n\t};\r\n\r\n\tconst validarPassword2 = () => {\r\n\t\tif (password.campo.trim().length > 0) {\r\n\t\t\tif (password.campo !== password2.campo) {\r\n\t\t\t\tcambiarPassword2((prevState) => {\r\n\t\t\t\t\treturn { ...prevState, valido: \"false\" };\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tcambiarPassword2((prevState) => {\r\n\t\t\t\t\treturn { ...prevState, valido: \"true\" };\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\tconst Toast = Swal.mixin({\r\n\t\t\ttoast: true,\r\n\t\t\tposition: 'top-end',\r\n\t\t\tshowConfirmButton: false,\r\n\t\t\ttimer: 3000,\r\n\t\t\ttimerProgressBar: true,\r\n\t\t\tdidOpen: (toast) => {\r\n\t\t\t\ttoast.addEventListener('mouseenter', Swal.stopTimer)\r\n\t\t\t\ttoast.addEventListener('mouseleave', Swal.resumeTimer)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif (\r\n\t\t\tnombre.valido === \"true\" &&\r\n\t\t\tpassword.valido === \"true\" &&\r\n\t\t\tpassword2.valido === \"true\" &&\r\n\t\t\tcorreo.valido === \"true\"\r\n\t\t) {\r\n\t\t\t//cambiarFormularioValido(true);\r\n\t\t\tconst dataAx = {\r\n\t\t\t\tname: nombre.campo,\r\n\t\t\t\temail: correo.campo,\r\n\t\t\t\tpassword: password.campo\r\n\t\t\t}\r\n\t\t\tcambiarNombre({ campo: \"\", valido: null });\r\n\t\t\tcambiarPassword({ campo: \"\", valido: null });\r\n\t\t\tcambiarPassword2({ campo: \"\", valido: \"null\" });\r\n\t\t\tcambiarCorreo({ campo: \"\", valido: null });\r\n\r\n\t\t\tawait register(dataAx).then(r => {\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\ttitle: r.data.response\r\n\t\t\t\t})\r\n\t\t\t}).catch(e => {\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: 'error',\r\n\t\t\t\t\ttitle: e.response.data.response\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\t// ...\r\n\t\t} else {\r\n\t\t\t//cambiarFormularioValido(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// const changeRef = () => {\r\n\t// \tinputRef.current.disabled = nombre.valido && password.valido && password2.valido && password2.valido\r\n\t// }\r\n\tconst goToLogin = () => {\r\n\t\thistory.push('/')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img\r\n\t\t\t\tsrc={background}\r\n\t\t\t\talt=\"background\"\r\n\t\t\t\tclassName=\"myBackgroundLogin\"\r\n\t\t\t></img>\r\n\t\t\t<div className=\"divFormRegister\">\r\n\t\t\t<p className='title'><FontAwesome name='heartbeat'> SGP </FontAwesome></p>\r\n\r\n\t\t\t<main>\r\n\t\t\t\t\r\n\t\t\t\t\t<Formulario action=\"\" onSubmit={onSubmit}>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\testado={nombre}\r\n\t\t\t\t\t\t\tcambiarEstado={cambiarNombre}\r\n\t\t\t\t\t\t\ttipo=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"Nombre completo\"\r\n\t\t\t\t\t\t\tplaceholder=\"Nombre completo\"\r\n\t\t\t\t\t\t\tname=\"usuario\"\r\n\t\t\t\t\t\t\tleyendaError=\"El nombre solo puede contener letras y espacios.\"\r\n\t\t\t\t\t\t\texpresionRegular={expresiones.nombre}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\testado={correo}\r\n\t\t\t\t\t\t\tcambiarEstado={cambiarCorreo}\r\n\t\t\t\t\t\t\ttipo=\"email\"\r\n\t\t\t\t\t\t\tlabel=\"Correo Electrónico\"\r\n\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\tname=\"correo\"\r\n\t\t\t\t\t\t\tleyendaError=\"El correo solo puede contener letras, numeros, puntos, guiones y guion bajo.\"\r\n\t\t\t\t\t\t\texpresionRegular={expresiones.correo}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\testado={password}\r\n\t\t\t\t\t\t\tcambiarEstado={cambiarPassword}\r\n\t\t\t\t\t\t\ttipo=\"password\"\r\n\t\t\t\t\t\t\tlabel=\"Contraseña\"\r\n\t\t\t\t\t\t\tplaceholder=\"Contraseña\"\r\n\t\t\t\t\t\t\tname=\"password1\"\r\n\t\t\t\t\t\t\tleyendaError=\"La contraseña tiene que ser de 5 a 12 dígitos.\"\r\n\t\t\t\t\t\t\texpresionRegular={expresiones.password}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\testado={password2}\r\n\t\t\t\t\t\t\tcambiarEstado={cambiarPassword2}\r\n\t\t\t\t\t\t\ttipo=\"password\"\r\n\t\t\t\t\t\t\tlabel=\"Repetir contraseña\"\r\n\t\t\t\t\t\t\tplaceholder=\"Repertir Contraseña\"\r\n\t\t\t\t\t\t\tname=\"password2\"\r\n\t\t\t\t\t\t\tleyendaError=\"Ambas contraseñas deben ser iguales.\"\r\n\t\t\t\t\t\t\tfuncion={validarPassword2}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ContenedorBotonCentrado>\r\n\t\t\t\t\t\t\t<Boton id=\"btnLogIn\" type=\"submit\"className=\"boton\" onClick={goToLogin}>Enviar</Boton>\r\n\t\t\t\t\t\t\t{/* {formularioValido === true && (\r\n\t\t\t\t\t\t\t\t<MensajeExito ref={refSpan}> Usuario registrado exitosamente!</MensajeExito>\r\n\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t</ContenedorBotonCentrado>\r\n\t\t\t\t\t</Formulario>\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import '../styles/Navegation.css';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\"\r\nimport Swal from 'sweetalert2';\r\nconst Navegation = () => { \r\n  const history = useHistory();\r\n  const openModal = () => {\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres cerrar sesión?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      cancelButtonText: 'No',\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si',\r\n      confirmButtonAttributes :{\r\n        id: 'yesLogOut'\r\n      }\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          history.push('/'),\r\n          'Se cerro sesión correctamente'\r\n        )\r\n      }\r\n    })\r\n  }\r\n \r\n  return(\r\n  <Navbar bg=\"light\" expand=\"lg\" className='navegationPosition'>\r\n    <Container>\r\n      <Navbar.Brand href=\"/Home\" className='navBarBrand' id='brand'> <FontAwesome name='heartbeat' size='2x'> SGP </FontAwesome> </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"me-auto\" >\r\n          <Nav.Link href=\"/Home\" id=\"homeNav\" className=\"linkNavBar borderBrand\">Inicio</Nav.Link>\r\n          <Nav.Link href=\"/add-patient\" id=\"addPatientNav\" className=\"linkNavBar\">Agregar paciente</Nav.Link>\r\n          <Nav.Link href=\"/patient-list\" id=\"deletePatientNav\" className=\"linkNavBar\">Dar de baja paciente</Nav.Link>\r\n          <Nav.Link href=\"/watting-list\" id=\"wattingListNav\" className=\"linkNavBar\" disabled>Ver lista de espera</Nav.Link>\r\n          <Nav.Link href=\"/Home\" id=\"statisticsNav\" className=\"linkNavBar\" disabled>Ver estadisticas</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n     <Nav.Link id=\"logoutNav\" className=\"logoutNavBar\" onClick={openModal}>Cerrar sesión</Nav.Link>\r\n    </Container>\r\n  </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navegation","import Button from \"@restart/ui/esm/Button\";\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\n//Se crea el siguiente componente para poder agregar la cantidad de botones que queramos mas facilmente a la pagina.\r\nconst ButtonsHome = props => { \r\n    return (\r\n    <Button  variant=\"outline-info\"  id={props.id} className={'btn btn-block btnStyle' } onClick={props.onClickDo} disabled={props.isDisabled}>\r\n        <FontAwesome name={props.icon} size='4x' className='iconsHomeColor'/>\r\n        <br/>\r\n         {props.text}\r\n    </Button>\r\n    )\r\n}\r\n\r\nexport default ButtonsHome;","import '../styles/Home.css';\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport Navegation from './Navegation';\r\nimport ButtonActions from '../elementos/ButtonActions';\r\n\r\nconst Home = () => {\r\n    const history = useHistory();\r\n\r\n    //Para poder ir a la pagina de agregar paciente.\r\n    const goToAddPatient = () => {\r\n        history.push(\"/add-patient\")\r\n    };\r\n\r\n    // Para poder ir a la pagina de lista de espera.\r\n    const goToWattingList = () => {\r\n        history.push(\"/watting-list\")\r\n    };\r\n\r\n    // Para poder ir a la baja de pacientes\r\n    const goToPatientsList = () => {\r\n        history.push(\"/patient-list\")\r\n    };\r\n\r\n    // Provisorio hasta que esten las paginas reales.\r\n    const goToHome = () => {\r\n        history.push(\"/Home\")\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n            {/*La barra de navegacion, se encuentra en otro componente*/}\r\n            <Navegation/>\r\n\r\n            {/*El fondo de la pagina*/}\r\n            <div className='welcome'>\r\n                <p>Bienvenidos al Sistema de Gestión de Pacientes</p>\r\n            </div>\r\n            {/* Botones, te llevan a las paginas que dice */}\r\n            <div className='gridStyle marginTop'>\r\n                <ButtonActions id={\"addPatient\"} text={'Agregar un paciente'} onClickDo={goToAddPatient} icon={'user-plus'} isDisabled={false}/>\r\n                <ButtonActions id={\"deletePatient\"} text={'Dar de baja un paciente'} onClickDo={goToPatientsList} icon={'user-times'} isDisabled={false}/>\r\n            </div>\r\n            <div className='gridStyle'>\r\n                <ButtonActions id={\"wattingList\"} text={'Ver lista de espera'} onClickDo={goToWattingList} icon={'list'} isDisabled={true}/>\r\n                <ButtonActions id={\"statistics\"} text={'Ver estadisticas'} onClickDo={goToHome} icon={'signal'} isDisabled={true}/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst Paciente = () => {\r\n\r\n    //pacientes hardcodeados, este sprint se toman de la base \r\n\r\n    const [listaPacientes, setPacientes] = useState([\r\n\r\n        {\r\n            dni:40163498,\r\n            nombre:'Raul',\r\n            apellido:'Carson'},\r\n\r\n        {\r\n            dni:42516864,\r\n            nombre:'Pedro',\r\n            apellido:'head'}\r\n\r\n        \r\n    ]);\r\n\r\n\r\n    return ( \r\n        <Container>\r\n            {listaPacientes.map(paci => (\r\n                <div>\r\n                    <p>{paci.dni}</p>\r\n                    <p>{paci.nombre}</p>\r\n                    <p>{paci.apellido}</p>\r\n                </div>\r\n            ))}\r\n                \r\n            \r\n        </Container>\r\n    );\r\n\r\n}\r\n \r\nexport default Paciente;","import { Component } from 'react';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { altaPaciente } from '../routes/apiCallsPatient';\r\nimport Swal from 'sweetalert2';\r\nimport '../styles/PacientForm.css'\r\nimport Navegation from './Navegation'\r\nexport class PacientForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nombre: '',\r\n            apellido: '',\r\n            dni: '',\r\n            calle: '',\r\n            numero: '',\r\n            piso: '',\r\n            codigo_postal: '',\r\n            localidad: '',\r\n            sintomas: [],\r\n            sintomasExtras: '',\r\n            provincia: '',\r\n            isNn: false,\r\n            infoNN: '',\r\n            bSintomasExtras: false,\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleChangeCheckBox = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.checked;\r\n        const area = document.getElementById('ControlTextAreaNN')\r\n\r\n        for (let index = 1; index < 10; index++) {\r\n            let area2 = document.getElementById(`ControlTextAreaNN${index}`)\r\n            area2.disabled = event.target.checked\r\n        }\r\n\r\n        area.disabled = !event.target.checked\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    handleCheckBoxSymptoms = (event) => {\r\n        const name = event.target.name;\r\n\r\n        event.target.checked ? this.state.sintomas.push(name) : this.setState({ [name]: this.state.sintomas.filter(s => s !== name) })\r\n    }\r\n\r\n    handleExtraSymptoms = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.checked;\r\n        const area = document.getElementById('formControlSE')\r\n\r\n        area.disabled = !event.target.checked\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        const Toast =  Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener('mouseenter', Swal.stopTimer)\r\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        event.preventDefault();\r\n\r\n        await altaPaciente(this.state).then(r => {\r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: r.data.response\r\n            })\r\n        })\r\n            .catch(e => {\r\n                Toast.fire({\r\n                    icon: 'error',\r\n                    title: e.response.data.response\r\n                })\r\n            })\r\n        \r\n        this.resetForm()\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            nombre: '',\r\n            apellido: '',\r\n            dni: '',\r\n            calle: '',\r\n            numero: '',\r\n            piso: '',\r\n            codigo_postal: '',\r\n            localidad: '',\r\n            sintomas: [],\r\n            sintomasExtras: '',\r\n            provincia: '',\r\n            isNn: false,\r\n            infoNN: '',\r\n            bSintomasExtras: false,\r\n        })\r\n\r\n        const checkToReset = Array.from(document.getElementsByClassName(\"checkBoxToResetPFIngreso\"))\r\n        \r\n\r\n        checkToReset.forEach( c => {\r\n            c.checked = false\r\n        })\r\n\r\n        const area = document.getElementById('ControlTextAreaNN')\r\n\r\n        for (let index = 1; index < 10; index++) {\r\n            let area2 = document.getElementById(`ControlTextAreaNN${index}`)\r\n            area2.disabled = false\r\n        }\r\n\r\n        area.disabled = false\r\n\r\n        const areaExtra = document.getElementById('formControlSE')\r\n\r\n        areaExtra.disabled = true\r\n    }\r\n\r\n    test = () => { \r\n        const check = document.getElementById('checkNN')\r\n\r\n        console.log(check)\r\n\r\n        return check.checked\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Navegation/>\r\n                <Container className='marginTop'>\r\n                    <h3>Ingrese los datos:</h3>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN1\">\r\n                                    <Form.Label>Nombre/s</Form.Label>\r\n                                    <Form.Control value={this.state.nombre}\r\n                                        onChange={this.handleChange}\r\n                                        name='nombre'\r\n                                        size=\"sm\"\r\n                                        type=\"text\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN2\">\r\n                                    <Form.Label>Apellido/s</Form.Label>\r\n                                    <Form.Control value={this.state.apellido}\r\n                                        onChange={this.handleChange}\r\n                                        name='apellido'\r\n                                        size=\"sm\"\r\n                                        type=\"text\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={3}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN3\">\r\n                                    <Form.Label>DNI</Form.Label>\r\n                                    <Form.Control value={this.state.dni}\r\n                                        onChange={this.handleChange}\r\n                                        name='dni'\r\n                                        size=\"sm\"\r\n                                        type=\"number\"\r\n                                        className=\"controlNumber\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={3}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN4\">\r\n                                    <Form.Label>Provincia</Form.Label>\r\n                                    <Form.Control value={this.state.provincia}\r\n                                        onChange={this.handleChange}\r\n                                        name='provincia'\r\n                                        size=\"sm\"\r\n                                        type=\"text\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={3}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN5\">\r\n                                    <Form.Label>Localidad</Form.Label>\r\n                                    <Form.Control value={this.state.localidad}\r\n                                        onChange={this.handleChange}\r\n                                        name='localidad'\r\n                                        size=\"sm\"\r\n                                        type=\"text\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={3}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN6\">\r\n                                    <Form.Label>Calle</Form.Label>\r\n                                    <Form.Control value={this.state.calle}\r\n                                        onChange={this.handleChange}\r\n                                        name='calle'\r\n                                        size=\"sm\"\r\n                                        type=\"text\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={2}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN7\">\r\n                                    <Form.Label>Numero</Form.Label>\r\n                                    <Form.Control value={this.state.numero}\r\n                                        onChange={this.handleChange}\r\n                                        name='numero'\r\n                                        size=\"sm\"\r\n                                        type=\"number\"\r\n                                        className=\"controlNumber\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={2}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN8\">\r\n                                    <Form.Label>Piso</Form.Label>\r\n                                    <Form.Control value={this.state.piso}\r\n                                        onChange={this.handleChange}\r\n                                        name='piso'\r\n                                        size=\"sm\"\r\n                                        type=\"number\"\r\n                                        className=\"controlNumber\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={2}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN9\">\r\n                                    <Form.Label>Código Postal</Form.Label>\r\n                                    <Form.Control value={this.state.codigo_postal}\r\n                                        onChange={this.handleChange}\r\n                                        name='codigo_postal'\r\n                                        size=\"sm\"\r\n                                        type=\"text\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Checkbox onChange={this.handleCheckBoxSymptoms} className=\"checkBoxToResetPFIngreso\" name=\"Fiebre\" />\r\n                                <InputGroup.Text> Fiebre </InputGroup.Text>\r\n                            </InputGroup>\r\n\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Checkbox onChange={this.handleCheckBoxSymptoms} className=\"checkBoxToResetPFIngreso\" name=\"Tos\" />\r\n                                <InputGroup.Text> Tos </InputGroup.Text>\r\n                            </InputGroup>\r\n\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Checkbox onChange={this.handleCheckBoxSymptoms} className=\"checkBoxToResetPFIngreso\" name=\"Perdida de Gusto/Olfato\" />\r\n                                <InputGroup.Text> Perdida de Gusto/olfato </InputGroup.Text>\r\n                            </InputGroup>\r\n\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Checkbox onChange={this.handleCheckBoxSymptoms} className=\"checkBoxToResetPFIngreso\" name=\"Dolor de Cabeza\" />\r\n                                <InputGroup.Text> Dolor de Cabeza </InputGroup.Text>\r\n                            </InputGroup>\r\n\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Checkbox onChange={this.handleCheckBoxSymptoms} className=\"checkBoxToResetPFIngreso\" name=\"Dolor de Garganta\" />\r\n                                <InputGroup.Text> Dolor de Garganta </InputGroup.Text>\r\n                            </InputGroup>\r\n\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Checkbox onChange={this.handleCheckBoxSymptoms} className=\"checkBoxToResetPFIngreso\" name=\"Dificultad para respirar o disnea\" />\r\n                                <InputGroup.Text> Dificultad para respirar o disnea </InputGroup.Text>\r\n                            </InputGroup>\r\n\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Checkbox onChange={this.handleExtraSymptoms} className=\"checkBoxToResetPFIngreso\" name=\"bSintomasExtras\" />\r\n                                <InputGroup.Text> Aclaraciones Extras </InputGroup.Text>\r\n                                <Col xs={4}>\r\n                                    <Form.Control value={this.state.sintomasExtras}\r\n                                        id='formControlSE'\r\n                                        onChange={this.handleChange}\r\n                                        name='sintomasExtras'\r\n                                        as=\"textarea\" rows={5}\r\n                                        disabled\r\n                                    />\r\n                                </Col>\r\n                            </InputGroup>\r\n\r\n                        </Row>\r\n                        <Row hidden>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Checkbox name=\"isNn\" id=\"checkNN\" onChange={this.handleChangeCheckBox} className=\"checkBoxToResetPFIngreso\" />\r\n                                <InputGroup.Text> Es NN </InputGroup.Text>\r\n                            </InputGroup>\r\n\r\n                            <Col xs={4}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"ControlTextAreaNN\" >\r\n                                    <Form.Label>Datos Extras Ingresos NN</Form.Label>\r\n                                    <Form.Control value={this.state.infoNN}\r\n                                        onChange={this.handleChange}\r\n                                        name='infoNN'\r\n                                        as=\"textarea\" rows={5}\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Button variant=\"primary\" id=\"ingresarButton\" type=\"submit\"> Ingresar Paciente </Button>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}","import axios from \"axios\";\r\n\r\n// const basicUrl = 'http://sistema-gestion-paciente.herokuapp.com/api';\r\n\r\nexport const altaPaciente = (obj) => {\r\n    return axios.post(`/altaPaciente`, obj, {\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n        }\r\n    })\r\n}","import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport '../styles/PatientList.css';\r\nimport Navegation from './Navegation';\r\nimport Swal from 'sweetalert2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClinicMedical } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass PatientsList extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          data: []\r\n        }\r\n    }\r\n    \r\n    getData = () => {\r\n        axios.get('http://localhost:3000/api/allPatients')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          var data = res.data\r\n          this.setState({data : data.data})\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getData();\r\n    }\r\n\r\n    deletePatient = (id) => {\r\n        \r\n        const Toast =  Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener('mouseenter', Swal.stopTimer)\r\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        });\r\n\r\n        axios.delete('http://localhost:3000/api/borrarPaciente/'+id)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(\"Se elimino un paciente\");\r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: res.data.response\r\n            });\r\n        }).catch(e => {\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: e.response\r\n            });\r\n        });\r\n\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 2001);\r\n    }\r\n\r\n    render () {\r\n\r\n        if(this.state.data.length != 0){\r\n            return (\r\n                   \r\n                <div> \r\n                    <Navegation/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <h3>Pacientes a dar de baja:</h3>\r\n                    <Row xs={1} md={2} className=\"g-4\">\r\n                         {this.state.data.map(paciente => (\r\n                             <Card  className=\"titlePatientList\" key={paciente._id} style={{ width: '18rem' }}>\r\n                                 <Card.Body>\r\n                                 <Card.Title className=\"linea\">{paciente.name} {paciente.surname}</Card.Title>\r\n                                 <Card.Text>DNI: {paciente.dni}</Card.Text>\r\n                                 <Card.Text>Localidad: {paciente.location}</Card.Text>\r\n                                 <Button variant=\"danger\" onClick = {() => this.deletePatient(paciente._id)}>Dar de baja</Button>\r\n                                 </Card.Body>\r\n                             </Card>\r\n                         ))}\r\n                     </Row>\r\n                     \r\n                     \r\n                 </div>\r\n             );\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    \r\n                    <Navegation/>\r\n\r\n                    <div className=\"centrar\">\r\n                        <FontAwesomeIcon icon={faClinicMedical} size=\"4x\"/>\r\n                        <p>No hay pacientes</p>\r\n                    </div>\r\n                </React.Fragment>\r\n               \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PatientsList;","import {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\nimport Login from \"./Login\";\r\nimport PageError from \"./PageError\";\r\nimport RecoverPassword from \"./RecoverPassword\";\r\nimport RestabContraseña from \"./RestabContraseña\";\r\n\r\nimport Register from './Register'\r\nimport Home from \"./Home\";\r\n//import { Header } from \"./Header\";\r\nimport Paciente from \"./Paciente\";\r\nimport { PacientForm } from \"./PacientForm\";\r\nimport PatientsList from './PatientsList';\r\n\r\nconst Spg = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/patient-list\" component={PatientsList}></Route>\r\n          <Route path=\"/restabContraseña\" component={RestabContraseña}></Route>\r\n          <Route path=\"/recoverPassword\" component={RecoverPassword}></Route>\r\n          <Route path=\"/Home\" component={Home}></Route>\r\n          <Route path=\"/add-patient\" component={PacientForm}></Route>\r\n          <Route path=\"/watting-list\" component={Paciente}></Route>\r\n          <Route path=\"/error\" component={PageError}></Route>\r\n          <Route path=\"/register\" component={Register}></Route>\r\n          <Route path=\"/\" component={Login}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Spg;\r\n","\r\nconst reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './estilos.css';\r\n//import './index.css';\r\nimport Spg from './components/Spg';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Spg />\r\n  </React.StrictMode>,\r\n  document.getElementById('Spg')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}