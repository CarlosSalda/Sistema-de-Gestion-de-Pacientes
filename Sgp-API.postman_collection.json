{
	"info": {
		"_postman_id": "74f2be2b-b10a-4a6b-a4da-5e70ecd558d8",
		"name": "Sgp API",
		"description": "-Endpoints para acceder a la base de datos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Tests Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/login',",
									"    method: 'POST',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"        mode:'raw',",
									"        raw: JSON.stringify({",
									"            \"email\": \"emailFallo@gmail.com\",",
									"            \"password\": \"aaaaa\"",
									"        })",
									"    }",
									"}, (err, res) => {",
									"    pm.test(\"Usuario no encontrado\", function() {",
									"        pm.expect(res).to.have.status(406)",
									"    })",
									"",
									"    pm.test(\"Email no encontrado body\", function(){",
									"        const resP= res.json()",
									"        pm.expect(resP.response).to.eql(\"Usuario no encontrado\")",
									"    })",
									"})",
									"",
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/login',",
									"    method: 'POST',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"        mode:'raw',",
									"        raw: JSON.stringify({",
									"            \"email\": \"a@gmail.com\",",
									"            \"password\": \"aaaaa\"",
									"        })",
									"    }",
									"}, (err, res) => {",
									"    pm.test(\"Usuario no encontrado\", function(){",
									"        pm.expect(res).to.have.status(406)",
									"    })",
									"    ",
									"    pm.test(\"Test Response usuario logueado para un usuario existente\", function(){",
									"        const resP= res.json()",
									"        pm.expect(resP.response).to.eql(\"Usuario no encontrado\")",
									"    })  ",
									"})",
									"",
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/login',",
									"    method: 'POST',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"        mode:'raw',",
									"        raw: JSON.stringify({",
									"            \"emai\": \"a@gmail.com\",",
									"            \"password\": \"aaaaa\"",
									"        })",
									"    }",
									"}, (err, res) => {",
									"    pm.test(\"Test Response status 400 para un usuario existente, pero con error de campos\", function(){",
									"        pm.expect(res).to.have.status(404)",
									"    })",
									"    ",
									"    pm.test(\"Test Response usuario logueado para un usuario existente, pero con error de campos\", function(){",
									"        const resP= res.json()",
									"        pm.expect(resP.response).to.eql('Revisar campos y/o sus datos')",
									"    })  ",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"a@gmail.com\",\n    \"password\": \"12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sistema-gestion-paciente.herokuapp.com/api/login",
							"protocol": "https",
							"host": [
								"sistema-gestion-paciente",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register",
			"item": [
				{
					"name": "Tests Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuario registrado exitosamente con status 200\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"Usuario registrado exitosamente con response de exito\", function() {",
									"    const res = pm.response.json()",
									"    pm.expect(res.response).to.eql(\"Usuario registrado con exito\")",
									"})",
									"",
									"pm.test(\"Usuario registrado con todos los datos\", function() {",
									"    const res = pm.response.json()",
									"    pm.expect(res.user.name).to.eql(\"userPrueba\")",
									"    pm.expect(res.user.email).to.eql(\"a2@gmail.com\")",
									"    pm.expect(res.user.password).to.eql(\"userPrueba\")",
									"    pm.expect(res.user.receptionist).to.eql(false)",
									"    pm.expect(res.user.doctor).to.eql(true)",
									"})",
									"",
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/register',",
									"    method: 'POST',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"        mode:'raw',",
									"        raw: JSON.stringify({",
									"            \"name\": \"userPrueba\",",
									"            \"email\": \"a@gmail.com\",",
									"            \"password\": \"userPrueba\",",
									"            \"receptionist\": true,",
									"            \"doctor\": false",
									"        })",
									"    }",
									"}, (err, res) => {",
									"   pm.test(\"Usuario intenta registrarse, con email ya usado y recibe status 406\", function() {",
									"        pm.expect(res).to.have.status(406)",
									"    })",
									"",
									"    pm.test(\"Usuario intenta registrarse, con email ya registrado. Recibe response de email ya utilizado\", function() {",
									"        const resP = res.json()",
									"        pm.expect(resP.response).to.eql(\"Usuario ya creado para este email\")",
									"    })",
									"})",
									"",
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/register',",
									"    method: 'POST',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"        mode:'raw',",
									"        raw: JSON.stringify({",
									"            \"name\": \"userPrueba\",",
									"            \"emai\": \"mailParaPersonaNueva@gmail.com\",",
									"            \"passwor\": \"userPrueba\", ",
									"            \"receptionist\": true,",
									"            \"doctor\": false",
									"        })",
									"    }",
									"}, (err, res) => {",
									"   pm.test(\"intento de registrar usuario nuevo y recibe response status 404\", function() {",
									"        pm.expect(res).to.have.status(404)",
									"    })",
									"",
									"    pm.test(\"intento de registrar usuario nuevo pero con errores de campos(bad request)\", function() {",
									"        const resP = res.json()",
									"        pm.expect(resP.response).to.eql('Revisar campos y/o sus datos')",
									"    })",
									"})",
									"",
									"",
									"pm.test(\"Borrar usuario justo despues de crearse\", function() {",
									"    const res = pm.response.json()",
									"",
									"    pm.sendRequest({",
									"    url: `https://sistema-gestion-paciente.herokuapp.com/api/delete/${res.user._id}`,",
									"    method: 'PUT',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"    }",
									"}, (err, res) => {",
									"   pm.test(\"Se borra usuario recien creado con exito\", function() {",
									"        pm.expect(res).to.have.status(200)",
									"    })",
									"",
									"    pm.test(\"Se borra usuario post creacion y se checkea response\", function() {",
									"        const resP = res.json()",
									"        pm.expect(resP.response).to.eql('Usuario eliminado correctamente!')",
									"    })",
									"})",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"userPrueba\",\n    \"email\": \"a2@gmail.com\",\n    \"password\": \"userPrueba\",\n    \"receptionist\": false,\n    \"doctor\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sistema-gestion-paciente.herokuapp.com/api/register",
							"protocol": "https",
							"host": [
								"sistema-gestion-paciente",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Registro exitoso de usuario"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Test Get User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuario encontrado exitosamente con status 200\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"Response 'Usuario encontrado' \", function() {",
									"    const res = pm.response.json();",
									"    pm.expect(res.response).to.eql('Usuario encontrado') ",
									"})",
									"",
									"",
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/users/614f9117cd2f4a0f81ca23f',",
									"    method: 'GET',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"    }",
									"}, (err, res) => {",
									"    pm.test(\"Error en el sistema\", function() {",
									"        pm.expect(res).to.have.status(500)",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sistema-gestion-paciente.herokuapp.com/api/users/614f9117cd2f4a0f81ca23fa",
							"protocol": "https",
							"host": [
								"sistema-gestion-paciente",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"614f9117cd2f4a0f81ca23fa"
							]
						},
						"description": "Devuelve el usuario con sus datos para el id pasado por parametro"
					},
					"response": []
				},
				{
					"name": "Test Get All Users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuarios encontrados exitosamente con status 200\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"Usuarios encontrados exitosamente\", function() {",
									"    const res = pm.response.json();",
									"    const isArray = Array.isArray(res.data);",
									"    pm.expect(isArray).to.eql(Array.isArray([])) ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sistema-gestion-paciente.herokuapp.com/api/users",
							"protocol": "https",
							"host": [
								"sistema-gestion-paciente",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Devuelve todos los usuarios de la base de datos"
					},
					"response": []
				},
				{
					"name": "Test Get User by Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuario encontrado exitosamente con status 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"pm.test(\"Response 'Usuario encontrado' \", function() {\r",
									"    const res = pm.response.json();\r",
									"    pm.expect(res.response).to.eql('Usuario encontrado') \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sistema-gestion-paciente.herokuapp.com/api/users/byEmail/b@gmail.com",
							"protocol": "https",
							"host": [
								"sistema-gestion-paciente",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"byEmail",
								"b@gmail.com"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patient",
			"item": [
				{
					"name": "New Patient",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Paciente Octavio Jorge agregado correctamente, response status 201\", function(){",
									"    pm.response.to.have.status(201)",
									"});",
									"",
									"pm.test(\"Paciente Octavio Jorge agregado correctamente, response 'Paciente Octavio Jorge ingresado correctamente'\", function(){",
									"    const res = pm.response.json();",
									"    pm.expect(res.response).to.eql('Paciente Octavio Jorge ingresado con Exito!') ",
									"});",
									"",
									"pm.test(\"Paciente Octavio Jorge agregado correctamente el dia de hoy\", function(){",
									"    const res = pm.response.json();",
									"    const fecha = new Date(res.data.entryDate)",
									"    const fechaHoy = new Date()",
									"    pm.expect(fecha.getFullYear()).to.eql(fechaHoy.getFullYear()) ",
									"    pm.expect(fecha.getMonth()).to.eql(fechaHoy.getMonth()) ",
									"    pm.expect(fecha.getDay()).to.eql(fechaHoy.getDay()) ",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/altaPaciente',",
									"    method: 'POST',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"        mode:'raw',",
									"        raw: JSON.stringify({",
									"            \"nombre\": \"\",",
									"            \"apellido\": \"\", ",
									"            \"dni\": \"\",",
									"            \"calle\": \"\",",
									"            \"numero\": \"\",",
									"            \"piso\": \"\", ",
									"            \"codigo_postal\": \"\",",
									"            \"localidad\": \"\",",
									"            \"provincia\": \"\",",
									"            \"isNn\": true,",
									"            \"sintomas\": [\"Fiebre\"],",
									"            \"bSintomasExtras\": false,",
									"            \"sintomasExtras\": \"\",",
									"            \"infoNN\": \"mujer de 30 a 40 años ingresada con fiebre. Usa jeans azules y remera negra\"",
									"        })",
									"    }",
									"}, (err, res) => {",
									"   pm.test(\"ingresa un NN al sistema de turnos, response status 201\", function() {",
									"        pm.expect(res).to.have.status(201)",
									"    })",
									"",
									"    pm.test(\"ingresa un NN al sistema de turnos, response 'Paciente NN ingresado con exito!' \", function() {",
									"        const resP = res.json()",
									"        pm.expect(resP.response).to.eql('Paciente NN ingresado con exito!')",
									"    })",
									"",
									"    pm.test(\"Borrar paciente NN justo despues de crearse\", function() {",
									"    const resPostCall = res.json()",
									"",
									"    pm.sendRequest({",
									"        url: `https://sistema-gestion-paciente.herokuapp.com/api/borrarPaciente/${resPostCall.data._id}`,",
									"        method: 'DELETE',",
									"        header: {",
									"            'content-type': 'application/json'",
									"        },",
									"        body: {",
									"        }",
									"        }, (err, result) => {",
									"        pm.test(\"Se borra paciente nn recien creado con exito\", function() {",
									"                pm.expect(result).to.have.status(200)",
									"        })",
									"",
									"        pm.test(\"Se borra usuario post creacion y se checkea response\", function() {",
									"            const resP = result.json()",
									"            pm.expect(resP.response).to.eql('Paciente eliminado correctamente!')",
									"        })",
									"        })",
									"    })",
									"})",
									"",
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/altaPaciente',",
									"    method: 'POST',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"        mode:'raw',",
									"        raw: JSON.stringify({",
									"            \"nombre\": \"\",",
									"            \"apellido\": \"\", ",
									"            \"dni\": \"\",",
									"            \"calle\": \"\",",
									"            \"numero\": \"\",",
									"            \"piso\": \"\", ",
									"            \"codigo_postal\": \"\",",
									"            \"localidad\": \"\",",
									"            \"provincia\": \"\",",
									"            \"isNn\": false,",
									"            \"sintomas\": [\"Fiebre\"],",
									"            \"bSintomasExtras\": false,",
									"            \"sintomasExtras\": \"\",",
									"            \"infoNN\": \"mujer de 30 a 40 años ingresada con fiebre. Usa jeans azules y remera negra\"",
									"        })",
									"    }",
									"}, (err, res) => {",
									"   pm.test(\"ingresa un NN al sistema de turnos sin datos personales y sin avisar que es NN, response status 400\", function() {",
									"        pm.expect(res).to.have.status(400)",
									"    })",
									"",
									"    pm.test(\"ingresa un NN al sistema de turnos sin datos personales y sin avisar que es NN, response 'Error al Ingresar, paciente sin datos personales' \", function() {",
									"        const resP = res.json()",
									"        pm.expect(resP.response).to.eql('Error al Ingresar, paciente sin datos personales')",
									"    })",
									"})",
									"",
									"pm.sendRequest({",
									"    url: 'https://sistema-gestion-paciente.herokuapp.com/api/altaPaciente',",
									"    method: 'POST',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"        mode:'raw',",
									"        raw: JSON.stringify({",
									"            \"nombre\": \"Carlos\",",
									"            \"apellido\": \"Saldaña\", ",
									"            \"dni\": \"3894960\",",
									"            \"calle\": \"fake street\",",
									"            \"numero\": \"123\",",
									"            \"piso\": \"1\", ",
									"            \"codigo_postal\": \"1888\",",
									"            \"localidad\": \"Florencio Varela\",",
									"            \"provincia\": \"Buenos aires\",",
									"            \"isNn\": true,",
									"            \"sintomas\": [\"Fiebre\", \"Tos\"],",
									"            \"bSintomasExtras\": false,",
									"            \"sintomasExtras\": \"\",",
									"            \"infoNN\": \"hombre de 30 a 40 años ingresado con fiebre. Usa jeans azules y remera negra\"",
									"        })",
									"    }",
									"}, (err, res) => {",
									"   pm.test(\"ingresa un NN al sistema de turnos, response status 201\", function() {",
									"        pm.expect(res).to.have.status(201)",
									"    })",
									"",
									"    pm.test(\"ingresa un NN al sistema de turnos, response 'Paciente NN ingresado con exito!' \", function() {",
									"        const resP = res.json()",
									"        pm.expect(resP.response).to.eql('Paciente NN ingresado con exito!')",
									"    })",
									"",
									"    pm.test(\"campos vacios, previamente con data pero es borrada si era NN \", function() {",
									"        const resP = res.json()",
									"       ",
									"        pm.expect(resP.data.name).to.eql('')",
									"        pm.expect(resP.data.surname).to.eql('')",
									"        pm.expect(resP.data.dni).to.eql('')",
									"        pm.expect(resP.data.street).to.eql('')",
									"        pm.expect(resP.data.number).to.eql('')",
									"        pm.expect(resP.data.floor).to.eql('')",
									"        pm.expect(resP.data.zipCode).to.eql('')",
									"        pm.expect(resP.data.location).to.eql('')",
									"        pm.expect(resP.data.state).to.eql('')",
									"    })",
									"",
									"    pm.test(\"Borrar paciente NN justo despues de crearse\", function() {",
									"    })",
									"})",
									"",
									"pm.test(\"Borrar paciente justo despues de crearse\", function() {",
									"    const res = pm.response.json()",
									"",
									"    pm.sendRequest({",
									"    url: `https://sistema-gestion-paciente.herokuapp.com/api/borrarPaciente/${res.data._id}`,",
									"    method: 'DELETE',",
									"    header: {",
									"        'content-type': 'application/json'",
									"    },",
									"    body: {",
									"    }",
									"}, (err, res) => {",
									"    pm.test(\"Se borra paciente recien creado con exito\", function() {",
									"            pm.expect(res).to.have.status(200)",
									"        })",
									"",
									"        pm.test(\"Se borra usuario post creacion y se checkea response\", function() {",
									"            const resP = res.json()",
									"            pm.expect(resP.response).to.eql('Paciente eliminado correctamente!')",
									"        })",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Octavio\",\n    \"apellido\": \"Jorge\", \n    \"dni\": \"12345678\",\n    \"calle\": \"calle falsa\",\n    \"numero\": \"123\",\n    \"piso\": \"5\", \n    \"codigo_postal\": \"1888\",\n    \"localidad\": \"Florencio Varela\",\n    \"provincia\": \"BuenosAires\",\n    \"isNn\": false,\n    \"sintomas\": [\"Tos\", \"Fiebre\"],\n    \"bSintomasExtras\": false,\n    \"sintomasExtras\": \"\",\n    \"infoNN\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sistema-gestion-paciente.herokuapp.com/api/altaPaciente",
							"protocol": "https",
							"host": [
								"sistema-gestion-paciente",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"altaPaciente"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}